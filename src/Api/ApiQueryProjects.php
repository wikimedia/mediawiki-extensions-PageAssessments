<?php

namespace MediaWiki\Extension\PageAssessments\Api;

use ApiBase;
use ApiQuery;
use ApiQueryBase;

/*
 * API module for retrieving all the projects on a wiki
 */
class ApiQueryProjects extends ApiQueryBase {

	public function __construct( ApiQuery $query, $moduleName ) {
		parent::__construct( $query, $moduleName, 'pj' );
	}

	/**
	 * Get the cache mode for the data generated by this module.
	 * @param array $params
	 * @return string
	 */
	public function getCacheMode( $params ) {
		return 'public';
	}

	/**
	 * Evaluate the parameters, perform the requested query, and set up the result
	 */
	public function execute() {
		global $wgPageAssessmentsSubprojects;

		$params = $this->extractRequestParams();

		// Set the database query parameters
		$this->addTables( [ 'page_assessments_projects' ] );
		$this->addFields( [ 'project_title' => 'pap_project_title' ] );
		// If this wiki distinguishes between projects and subprojects, exclude
		// subprojects (i.e. projects with parents) unless explicitly asked for.
		if ( $wgPageAssessmentsSubprojects && !$params['subprojects'] ) {
			$this->addWhere( 'pap_parent_id IS NULL' );
		}
		$this->addOption( 'ORDER BY', 'pap_project_title' );

		// Execute the query and put the results in an array
		$db_res = $this->select( __METHOD__ );
		$projects = [];
		foreach ( $db_res as $row ) {
			$projects[] = $row->project_title;
		}

		// Build the API output
		$result = $this->getResult();
		$result->addValue( 'query', 'projects', $projects );
	}

	public function getAllowedParams() {
		global $wgPageAssessmentsSubprojects;

		$allowedParams = [];
		if ( $wgPageAssessmentsSubprojects ) {
			$allowedParams[ 'subprojects' ] = [
				ApiBase::PARAM_DFLT => false,
				ApiBase::PARAM_TYPE => 'boolean',
			];
		}
		return $allowedParams;
	}

	/**
	 * Return usage examples for this module
	 * @return array
	 */
	public function getExamplesMessages() {
		global $wgPageAssessmentsSubprojects;

		$exampleMessages = [
			'action=query&list=projects' => 'apihelp-query+projects-example',
		];
		if ( $wgPageAssessmentsSubprojects ) {
			$exampleMessages[ 'action=query&list=projects&pjsubprojects=true' ] =
				'apihelp-query+projects-example-subprojects';
		}
		return $exampleMessages;
	}

	public function getHelpUrls() {
		return 'https://www.mediawiki.org/wiki/Special:MyLanguage/Extension:PageAssessments';
	}
}
